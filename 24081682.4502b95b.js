(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{146:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(9),i=(n(0),n(179)),o={},c={id:"plugins/en/oauth",title:"oauth",description:"\x3c!--",source:"@site/docs/plugins/en/oauth.md",permalink:"/docs/plugins/en/oauth",editUrl:"https://github.com/apache/incubator-apisix/edit/master/website/docs/plugins/en/oauth.md",sidebar:"docs",previous:{title:"basic-auth",permalink:"/docs/plugins/en/basic-auth"},next:{title:"jwt-auth",permalink:"/docs/plugins/en/jwt-auth"}},l=[{value:"Name",id:"name",children:[]},{value:"Attributes",id:"attributes",children:[{value:"Token Introspection",id:"token-introspection",children:[]}]},{value:"Troubleshooting",id:"troubleshooting",children:[]}],b={rightToc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"name"},"Name"),Object(i.b)("p",null,"The OAuth 2 / Open ID Connect(OIDC) plugin provides authentication and introspection capability to APISIX."),Object(i.b)("h2",{id:"attributes"},"Attributes"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Requirement"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"client_id"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"required"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"OAuth client ID")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"client_secret"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"required"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"OAuth client secret")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"discovery"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"required"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"URL of the discovery endpoint of the identity server")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"realm"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Realm used for the authentication; default is apisix")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"bearer_only"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Setting this ",Object(i.b)("inlineCode",{parentName:"td"},"true")," will check for the authorization header in the request with a bearer token; default is ",Object(i.b)("inlineCode",{parentName:"td"},"false"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"logout_path"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"default is ",Object(i.b)("inlineCode",{parentName:"td"},"/logout"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"redirect_uri"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"default is ",Object(i.b)("inlineCode",{parentName:"td"},"ngx.var.request_uri"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"timeout"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"default is 3 seconds")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ssl_verify"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"default is ",Object(i.b)("inlineCode",{parentName:"td"},"false"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"introspection_endpoint"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"URL of the token verification endpoint of the identity server")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"introspection_endpoint_auth_method"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Authentication method name for token introspection")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"public_key"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The public key to verify the token")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"token_signing_alg_values_expected"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Algorithm used to sign the token")))),Object(i.b)("h3",{id:"token-introspection"},"Token Introspection"),Object(i.b)("p",null,"Token introspection helps to validate a request by verifying the token against an Oauth 2 authorization server.\nAs prerequisite, you should create a trusted client in the identity server and generate a valid token(JWT) for introspection.\nThe following image shows an example(successful) flow of the token introspection via the gateway."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"../images/plugin/oauth-1.png",alt:"token introspection"}))),Object(i.b)("p",null,"The following is the curl command to enable the plugin to an external service.\nThis route will protect ",Object(i.b)("inlineCode",{parentName:"p"},"https://httpbin.org/get"),"(echo service) by introspecting the token provided in the header of the request."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'curl http://127.0.0.1:9080/apisix/admin/routes/5 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n  "uri": "/get",\n  "plugins": {\n    "proxy-rewrite": {\n      "scheme": "https"\n    },\n    "openid-connect": {\n      "client_id": "api_six_client_id",\n      "client_secret": "client_secret_code",\n      "discovery": "full_URL_of_the_discovery_endpoint",\n      "introspection_endpoint": "full_URL_of_introspection_endpoint",\n      "bearer_only": true,\n      "realm": "master",\n      "introspection_endpoint_auth_method": "client_secret_basic"\n    }\n  },\n  "upstream": {\n    "type": "roundrobin",\n    "nodes": {\n      "httpbin.org:443": 1\n    }\n  }\n}\'\n')),Object(i.b)("p",null,"The following command can be used to access the new route."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'curl -i -X GET http://127.0.0.1:9080/get -H "Host: httpbin.org" -H "Authorization: Bearer {replace_jwt_token}"\n')),Object(i.b)("h4",{id:"introspecting-with-public-key"},"Introspecting with public key"),Object(i.b)("p",null,"You can also provide the public key of the JWT token to verify the token. In case if you have provided a public key and\na token introspection endpoint, the public key workflow will be executed instead of verifying with the identity server.\nThis method can be used if you want to reduce additional network calls and to speedup the process."),Object(i.b)("p",null,"The following configurations shows how to add a public key introspection to a route."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'curl http://127.0.0.1:9080/apisix/admin/routes/5 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n  "uri": "/get",\n  "plugins": {\n    "proxy-rewrite": {\n      "scheme": "https"\n    },\n    "openid-connect": {\n      "client_id": "api_six_client_id",\n      "client_secret": "client_secret_code",\n      "discovery": "full_URL_of_the_discovery_endpoint",\n      "bearer_only": true,\n      "realm": "master",\n      "token_signing_alg_values_expected": "RS256",\n      "public_key" : "-----BEGIN CERTIFICATE-----\n        {public_key}\n        -----END CERTIFICATE-----"\n}\n  },\n  "upstream": {\n    "type": "roundrobin",\n    "nodes": {\n      "httpbin.org:443": 1\n    }\n  }\n}\'\n')),Object(i.b)("h2",{id:"troubleshooting"},"Troubleshooting"),Object(i.b)("p",null,"Check/modify the DNS settings (`conf/config.yaml) if APISIX cannot resolve/connect to the identity provider."))}p.isMDXComponent=!0},179:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),u=p(n),s=a,O=u["".concat(o,".").concat(s)]||u[s]||d[s]||i;return n?r.a.createElement(O,c(c({ref:t},b),{},{components:n})):r.a.createElement(O,c({ref:t},b))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=s;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var b=2;b<i;b++)o[b]=n[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);